name: Linting & Coverage
on:
  workflow_call:

jobs:
  lint:
    name: ðŸ§ª Linting
    runs-on: ${{ vars.RTLDEV_MW_CI_OS }}
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Super Linter Code Base
        uses: github/super-linter/slim@v7
        env:
          FILTER_REGEX_INCLUDE: "/hexonet/*|/scripts/*|updateVersion.sh|setup.py"
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_BASH: true
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test_matrix:
    strategy:
      matrix:
        python-version: ${{ fromJson(vars.RTLDEV_MW_CI_PYTHON_MATRIX) }}

    runs-on: ${{ vars.RTLDEV_MW_CI_OS }}
    needs: lint
    name: ðŸ§ª Testing
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Python @ ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          check-latest: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip -V
          pip install --upgrade -e .
      - name: Unit & Coverage Report
        env:
          CNR_TEST_USER: ${{ secrets.RTLDEV_MW_CI_USER_CNR }}
          CNR_TEST_PASSWORD: ${{ secrets.RTLDEV_MW_CI_USERPASSWORD_CNR }}
        run: "./scripts/coverage.sh"
      - name: Upload htmlcov folder
        uses: actions/upload-artifact@v4
        with:
          name: coverage-folder-${{ matrix.python-version }}
          path: htmlcov
          retention-days: 1

  # test_release:
  #     runs-on: ${{ vars.RTLDEV_MW_CI_OS }}
  #     needs: 
  #     - lint
  #     - test_matrix
  #     name: ðŸ§ª Testing
  #     permissions:
  #       contents: read

  #     steps:
  #       - name: Checkout
  #         uses: actions/checkout@v5
  #         with:
  #           fetch-depth: 0
  #           persist-credentials: false
  #       - name: Python @ ${{ vars.RTLDEV_MW_CI_PYTHON_VERSION }}
  #         uses: actions/setup-python@v6
  #         with:
  #           check-latest: true
  #           python-version: ${{ vars.RTLDEV_MW_CI_PYTHON_VERSION }}
  #       - name: Install dependencies
  #         run: |
  #           pip install --upgrade pip build
  #           pip -V
  #           pip install --upgrade -e .
  #       - name: Test Release
  #         env:
  #           TWINE_TEST_USERNAME: ${{ secrets.TWINE_TEST_USERNAME }}
  #           TWINE_TEST_PASSWORD: ${{ secrets.TWINE_TEST_PASSWORD }}
  #           GITHUB_TOKEN: ${{ secrets.RTLDEV_MW_CI_TOKEN }}        
  #         run: |
  #           ./scripts/createdistribution.sh && ./scripts/uploaddistribution_test.sh

  dependabot:
    needs:
      - test_matrix
      - lint
    if: ${{ github.actor == 'dependabot[bot]' && (success() || needs.lint.result == 'success' || needs.test_matrix.result == 'success') }}
    uses: ./.github/workflows/auto-merge-dependabot-pr.yml
    secrets: inherit
    permissions:
      contents: write
      pull-requests: write
