name: Linting & Coverage
on:
  workflow_call:

# jobs:
  # lint:
  #   name: ðŸ§ª Linting
  #   runs-on: ${{ vars.RTLDEV_MW_CI_OS }}
  #   permissions:
  #     contents: read
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         persist-credentials: false
  #     - name: Super Linter Code Base
  #       uses: github/super-linter/slim@v7
  #       env:
  #         FILTER_REGEX_INCLUDE: "((/src/main/.*.java)|updateVersion.sh)"
  #         DEFAULT_BRANCH: master
  #         VALIDATE_JAVA: true
  #         VALIDATE_BASH: true
  #         VALIDATE_ALL_CODEBASE: false
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # test_matrix:
  #   name: ðŸ§ª Testing
  #   runs-on: ${{ vars.RTLDEV_MW_CI_OS }}
  #   needs: lint
  #   permissions:
  #     contents: read
  #   strategy:
  #     matrix:
  #       java-version: ${{ fromJson(vars.RTLDEV_MW_CI_JAVA_MATRIX) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         persist-credentials: false
  #     - name: Java JDK @^${{ matrix.java-version }}
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: ${{ matrix.java-version }}
  #         distribution: ${{ vars.RTLDEV_MW_CI_JAVA_DISTRO }}
  #     - name: Maven version
  #       run: mvn --version
  #     - name: Validate & Coverage Report
  #       env:
  #         CNR_TEST_USER: ${{ secrets.RTLDEV_MW_CI_USER_CNR }}
  #         CNR_TEST_PASSWORD: ${{ secrets.RTLDEV_MW_CI_USERPASSWORD_CNR }}
  #       run: |
  #         mvn -B clean site package -Pdev
  #         zip -r /home/runner/target.zip ./target
  #     - uses: actions/upload-artifact@v4
  #       id: upload
  #       with:
  #         name: coverage-report-${{ matrix.java-version }}
  #         path: ~/target.zip
  #         retention-days: 1

jobs:
  test_release:
    runs-on: ubuntu-latest
    steps:
      - name: Test Release
        env:
          GITHUB_TOKEN: ${{ secrets.RTLDEV_MW_CI_TOKEN }}
          MAVEN_OPTS: ${{ vars.MAVEN_OPTS }} -Pdev
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ENCRYPTED_C9F9AEDF26B7_KEY: ${{ secrets.ENCRYPTED_C9F9AEDF26B7_KEY }}
          ENCRYPTED_C9F9AEDF26B7_IV: ${{ secrets.ENCRYPTED_C9F9AEDF26B7_IV }}
          CNR_TEST_USER: ${{ secrets.RTLDEV_MW_CI_USER_CNR }}
          CNR_TEST_PASSWORD: ${{ secrets.RTLDEV_MW_CI_USERPASSWORD_CNR }}
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          TEAMS_NOTIFICATION_URI: ${{ secrets.RTLDEV_MW_CI_NOTIFICATION_URI }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          ls -altr
          openssl aes-256-cbc -K "$ENCRYPTED_C9F9AEDF26B7_KEY" -iv "$ENCRYPTED_C9F9AEDF26B7_IV" -in codesigning.asc.enc -out codesigning.asc -d
          gpg --import --batch codesigning.asc
          npx semantic-release

  # dependabot:
  #   needs:
  #     - test_matrix
  #     - lint
  #   if: ${{ github.actor == 'dependabot[bot]' && (success() || needs.lint.result == 'success' || needs.test_matrix.result == 'success') }}
  #   uses: ./.github/workflows/auto-merge-dependabot-pr.yml
  #   secrets: inherit
  #   permissions:
  #     contents: write
  #     pull-requests: write
