name: Linting & Coverage
on:
  workflow_call:

jobs:
  test:
    name: ðŸ§ª Linting
    runs-on: ${{ vars.RTLDEV_MW_CI_OS }}
    permissions:
      contents: read
    container:
      image: perldocker/perl-tester:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: APT Packages
        run: apt install -y perl-doc ctags perltidy
      - name: Super Linter Code Base
        uses: github/super-linter/slim@v5
        env:
          FILTER_REGEX_INCLUDE: "/lib/*|/t/*|/scripts/.*.sh|updateVersion.sh"
          DEFAULT_BRANCH: master
          VALIDATE_PERL: true
          VALIDATE_BASH: true
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test_matrix:
    name: ðŸ§ª Testing
    needs: test
    runs-on: ${{ vars.RTLDEV_MW_CI_OS }}
    permissions:
      contents: read
    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}
    strategy:
      matrix:
        perl-version: ${{ fromJson(vars.RTLDEV_MW_CI_PERL_MATRIX) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: APT Packages
        run: apt install -y perl-doc ctags perltidy
      - name: Generate Coverage Report
        run: |
          cpm install -g --no-test --show-build-log-on-failure --cpanfile cpanfile
          ./scripts/coverage.sh
